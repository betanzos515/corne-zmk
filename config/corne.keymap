/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        TAP_SEMICOLON: TAP_SEMICOLON {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_SEMICOLON";
            #binding-cells = <0>;
            bindings = <&mt SEMI LS(SEMI)>, <&kp COLON>;
        };

        COMILLA: COMILLA {
            compatible = "zmk,behavior-tap-dance";
            label = "COMILLA";
            #binding-cells = <0>;
            bindings = <&mt SINGLE_QUOTE SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;
        };

        QUESTION_tap: QUESTION_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "QUESTION_TAP";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp QUESTION>;
        };

        BACK_SLASH: BACK_SLASH {
            compatible = "zmk,behavior-tap-dance";
            label = "BACK_SLASH";
            #binding-cells = <0>;
            bindings = <&kp BACKSLASH>, <&kp PIPE>;
        };

        llaves_corchetes: llaves_corchetes {
            compatible = "zmk,behavior-tap-dance";
            label = "LLAVES_CORCHETES";
            #binding-cells = <0>;
            bindings = <&mt LBRC LEFT_BRACE>, <&kp LEFT_BRACKET>;
        };

        llaves_corchetes_cierre: llaves_corchetes_cierre {
            compatible = "zmk,behavior-tap-dance";
            label = "LLAVES_CORCHETES_CIERRE";
            #binding-cells = <0>;
            bindings = <&mt RBRC RBRC>, <&kp RIGHT_BRACKET>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E             &kp R             &kp T           &kp Y      &kp U  &kp I      &kp O    &kp P           &kp BSPC
&kp TAB     &kp A  &kp S  &kp D             &kp F             &kp G           &kp H      &kp J  &kp K      &kp L    &TAP_SEMICOLON  &COMILLA
&kp LSHFT   &kp Z  &kp X  &kp C             &kp V             &kp B           &kp N      &kp M  &kp COMMA  &kp DOT  &QUESTION_tap   &kp ENTER
                          &kp LEFT_CONTROL  &kp LA(LEFT_ALT)  &kp LEFT_WIN    &kp SPACE  &mo 1  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE    &kp EXCL      &kp AT        &kp POUND     &kp DLLR      &kp PRCNT       &kp AMPS           &kp STAR                  &kp LPAR  &kp RPAR   &kp UNDER  &kp BSPC
&kp LS(CAPS)  &kp KP_EQUAL  &kp LT        &kp GT        &none         &none           &llaves_corchetes  &llaves_corchetes_cierre  &kp UP    &kp TILDE  &kp CARET  &kp BACKSLASH
&kp LSHFT     &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &kp GRAVE          &kp LEFT                  &kp DOWN  &kp RIGHT  &trans     &trans
                                          &kp LGUI      &trans        &kp SPACE       &kp RET            &trans                    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS      &kp PRCNT           &kp K_PP    &kp C_VOL_UP       &none           &none  &none  &kp BSPC
&kp LCTRL   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS     &kp EQUAL           &kp C_STOP  &kp C_VOLUME_DOWN  &none           &none  &none  &none
&kp LSHFT   &kp KP_N1        &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp NUMBER_0  &kp ASTERISK        &kp K_MUTE  &kp PLUS           &kp C_SNAPSHOT  &none  &none  &none
                                              &none            &trans        &kp LEFT_COMMAND    &kp RET     &trans             &none
            >;
        };
    };
};
